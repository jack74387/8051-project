                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.0 #15242 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module SevenSegmentLED
                                      6 	
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _CY
                                     13 	.globl _AC
                                     14 	.globl _F0
                                     15 	.globl _RS1
                                     16 	.globl _RS0
                                     17 	.globl _OV
                                     18 	.globl _F1
                                     19 	.globl _P
                                     20 	.globl _PS
                                     21 	.globl _PT1
                                     22 	.globl _PX1
                                     23 	.globl _PT0
                                     24 	.globl _PX0
                                     25 	.globl _RD
                                     26 	.globl _WR
                                     27 	.globl _T1
                                     28 	.globl _T0
                                     29 	.globl _INT1
                                     30 	.globl _INT0
                                     31 	.globl _TXD
                                     32 	.globl _RXD
                                     33 	.globl _P3_7
                                     34 	.globl _P3_6
                                     35 	.globl _P3_5
                                     36 	.globl _P3_4
                                     37 	.globl _P3_3
                                     38 	.globl _P3_2
                                     39 	.globl _P3_1
                                     40 	.globl _P3_0
                                     41 	.globl _EA
                                     42 	.globl _ES
                                     43 	.globl _ET1
                                     44 	.globl _EX1
                                     45 	.globl _ET0
                                     46 	.globl _EX0
                                     47 	.globl _P2_7
                                     48 	.globl _P2_6
                                     49 	.globl _P2_5
                                     50 	.globl _P2_4
                                     51 	.globl _P2_3
                                     52 	.globl _P2_2
                                     53 	.globl _P2_1
                                     54 	.globl _P2_0
                                     55 	.globl _SM0
                                     56 	.globl _SM1
                                     57 	.globl _SM2
                                     58 	.globl _REN
                                     59 	.globl _TB8
                                     60 	.globl _RB8
                                     61 	.globl _TI
                                     62 	.globl _RI
                                     63 	.globl _P1_7
                                     64 	.globl _P1_6
                                     65 	.globl _P1_5
                                     66 	.globl _P1_4
                                     67 	.globl _P1_3
                                     68 	.globl _P1_2
                                     69 	.globl _P1_1
                                     70 	.globl _P1_0
                                     71 	.globl _TF1
                                     72 	.globl _TR1
                                     73 	.globl _TF0
                                     74 	.globl _TR0
                                     75 	.globl _IE1
                                     76 	.globl _IT1
                                     77 	.globl _IE0
                                     78 	.globl _IT0
                                     79 	.globl _P0_7
                                     80 	.globl _P0_6
                                     81 	.globl _P0_5
                                     82 	.globl _P0_4
                                     83 	.globl _P0_3
                                     84 	.globl _P0_2
                                     85 	.globl _P0_1
                                     86 	.globl _P0_0
                                     87 	.globl _B
                                     88 	.globl _ACC
                                     89 	.globl _PSW
                                     90 	.globl _IP
                                     91 	.globl _P3
                                     92 	.globl _IE
                                     93 	.globl _P2
                                     94 	.globl _SBUF
                                     95 	.globl _SCON
                                     96 	.globl _P1
                                     97 	.globl _TH1
                                     98 	.globl _TH0
                                     99 	.globl _TL1
                                    100 	.globl _TL0
                                    101 	.globl _TMOD
                                    102 	.globl _TCON
                                    103 	.globl _PCON
                                    104 	.globl _DPH
                                    105 	.globl _DPL
                                    106 	.globl _SP
                                    107 	.globl _P0
                                    108 ;--------------------------------------------------------
                                    109 ; special function registers
                                    110 ;--------------------------------------------------------
                                    111 	.area RSEG    (ABS,DATA)
      000000                        112 	.org 0x0000
                           000080   113 _P0	=	0x0080
                           000081   114 _SP	=	0x0081
                           000082   115 _DPL	=	0x0082
                           000083   116 _DPH	=	0x0083
                           000087   117 _PCON	=	0x0087
                           000088   118 _TCON	=	0x0088
                           000089   119 _TMOD	=	0x0089
                           00008A   120 _TL0	=	0x008a
                           00008B   121 _TL1	=	0x008b
                           00008C   122 _TH0	=	0x008c
                           00008D   123 _TH1	=	0x008d
                           000090   124 _P1	=	0x0090
                           000098   125 _SCON	=	0x0098
                           000099   126 _SBUF	=	0x0099
                           0000A0   127 _P2	=	0x00a0
                           0000A8   128 _IE	=	0x00a8
                           0000B0   129 _P3	=	0x00b0
                           0000B8   130 _IP	=	0x00b8
                           0000D0   131 _PSW	=	0x00d0
                           0000E0   132 _ACC	=	0x00e0
                           0000F0   133 _B	=	0x00f0
                                    134 ;--------------------------------------------------------
                                    135 ; special function bits
                                    136 ;--------------------------------------------------------
                                    137 	.area RSEG    (ABS,DATA)
      000000                        138 	.org 0x0000
                           000080   139 _P0_0	=	0x0080
                           000081   140 _P0_1	=	0x0081
                           000082   141 _P0_2	=	0x0082
                           000083   142 _P0_3	=	0x0083
                           000084   143 _P0_4	=	0x0084
                           000085   144 _P0_5	=	0x0085
                           000086   145 _P0_6	=	0x0086
                           000087   146 _P0_7	=	0x0087
                           000088   147 _IT0	=	0x0088
                           000089   148 _IE0	=	0x0089
                           00008A   149 _IT1	=	0x008a
                           00008B   150 _IE1	=	0x008b
                           00008C   151 _TR0	=	0x008c
                           00008D   152 _TF0	=	0x008d
                           00008E   153 _TR1	=	0x008e
                           00008F   154 _TF1	=	0x008f
                           000090   155 _P1_0	=	0x0090
                           000091   156 _P1_1	=	0x0091
                           000092   157 _P1_2	=	0x0092
                           000093   158 _P1_3	=	0x0093
                           000094   159 _P1_4	=	0x0094
                           000095   160 _P1_5	=	0x0095
                           000096   161 _P1_6	=	0x0096
                           000097   162 _P1_7	=	0x0097
                           000098   163 _RI	=	0x0098
                           000099   164 _TI	=	0x0099
                           00009A   165 _RB8	=	0x009a
                           00009B   166 _TB8	=	0x009b
                           00009C   167 _REN	=	0x009c
                           00009D   168 _SM2	=	0x009d
                           00009E   169 _SM1	=	0x009e
                           00009F   170 _SM0	=	0x009f
                           0000A0   171 _P2_0	=	0x00a0
                           0000A1   172 _P2_1	=	0x00a1
                           0000A2   173 _P2_2	=	0x00a2
                           0000A3   174 _P2_3	=	0x00a3
                           0000A4   175 _P2_4	=	0x00a4
                           0000A5   176 _P2_5	=	0x00a5
                           0000A6   177 _P2_6	=	0x00a6
                           0000A7   178 _P2_7	=	0x00a7
                           0000A8   179 _EX0	=	0x00a8
                           0000A9   180 _ET0	=	0x00a9
                           0000AA   181 _EX1	=	0x00aa
                           0000AB   182 _ET1	=	0x00ab
                           0000AC   183 _ES	=	0x00ac
                           0000AF   184 _EA	=	0x00af
                           0000B0   185 _P3_0	=	0x00b0
                           0000B1   186 _P3_1	=	0x00b1
                           0000B2   187 _P3_2	=	0x00b2
                           0000B3   188 _P3_3	=	0x00b3
                           0000B4   189 _P3_4	=	0x00b4
                           0000B5   190 _P3_5	=	0x00b5
                           0000B6   191 _P3_6	=	0x00b6
                           0000B7   192 _P3_7	=	0x00b7
                           0000B0   193 _RXD	=	0x00b0
                           0000B1   194 _TXD	=	0x00b1
                           0000B2   195 _INT0	=	0x00b2
                           0000B3   196 _INT1	=	0x00b3
                           0000B4   197 _T0	=	0x00b4
                           0000B5   198 _T1	=	0x00b5
                           0000B6   199 _WR	=	0x00b6
                           0000B7   200 _RD	=	0x00b7
                           0000B8   201 _PX0	=	0x00b8
                           0000B9   202 _PT0	=	0x00b9
                           0000BA   203 _PX1	=	0x00ba
                           0000BB   204 _PT1	=	0x00bb
                           0000BC   205 _PS	=	0x00bc
                           0000D0   206 _P	=	0x00d0
                           0000D1   207 _F1	=	0x00d1
                           0000D2   208 _OV	=	0x00d2
                           0000D3   209 _RS0	=	0x00d3
                           0000D4   210 _RS1	=	0x00d4
                           0000D5   211 _F0	=	0x00d5
                           0000D6   212 _AC	=	0x00d6
                           0000D7   213 _CY	=	0x00d7
                                    214 ;--------------------------------------------------------
                                    215 ; overlayable register banks
                                    216 ;--------------------------------------------------------
                                    217 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        218 	.ds 8
                                    219 ;--------------------------------------------------------
                                    220 ; internal ram data
                                    221 ;--------------------------------------------------------
                                    222 	.area DSEG    (DATA)
                                    223 ;--------------------------------------------------------
                                    224 ; overlayable items in internal ram
                                    225 ;--------------------------------------------------------
                                    226 	.area	OSEG    (OVR,DATA)
      000000                        227 _main_n_10000_2:
      000000                        228 	.ds 4
                                    229 ;--------------------------------------------------------
                                    230 ; Stack segment in internal ram
                                    231 ;--------------------------------------------------------
                                    232 	.area SSEG
      000000                        233 __start__stack:
      000000                        234 	.ds	1
                                    235 
                                    236 ;--------------------------------------------------------
                                    237 ; indirectly addressable internal ram data
                                    238 ;--------------------------------------------------------
                                    239 	.area ISEG    (DATA)
                                    240 ;--------------------------------------------------------
                                    241 ; absolute internal ram data
                                    242 ;--------------------------------------------------------
                                    243 	.area IABS    (ABS,DATA)
                                    244 	.area IABS    (ABS,DATA)
                                    245 ;--------------------------------------------------------
                                    246 ; bit data
                                    247 ;--------------------------------------------------------
                                    248 	.area BSEG    (BIT)
                                    249 ;--------------------------------------------------------
                                    250 ; paged external ram data
                                    251 ;--------------------------------------------------------
                                    252 	.area PSEG    (PAG,XDATA)
                                    253 ;--------------------------------------------------------
                                    254 ; uninitialized external ram data
                                    255 ;--------------------------------------------------------
                                    256 	.area XSEG    (XDATA)
                                    257 ;--------------------------------------------------------
                                    258 ; absolute external ram data
                                    259 ;--------------------------------------------------------
                                    260 	.area XABS    (ABS,XDATA)
                                    261 ;--------------------------------------------------------
                                    262 ; initialized external ram data
                                    263 ;--------------------------------------------------------
                                    264 	.area XISEG   (XDATA)
                                    265 	.area HOME    (CODE)
                                    266 	.area GSINIT0 (CODE)
                                    267 	.area GSINIT1 (CODE)
                                    268 	.area GSINIT2 (CODE)
                                    269 	.area GSINIT3 (CODE)
                                    270 	.area GSINIT4 (CODE)
                                    271 	.area GSINIT5 (CODE)
                                    272 	.area GSINIT  (CODE)
                                    273 	.area GSFINAL (CODE)
                                    274 	.area CSEG    (CODE)
                                    275 ;--------------------------------------------------------
                                    276 ; interrupt vector
                                    277 ;--------------------------------------------------------
                                    278 	.area HOME    (CODE)
      000000                        279 __interrupt_vect:
      000000 02r00r00         [24]  280 	ljmp	__sdcc_gsinit_startup
                                    281 ; restartable atomic support routines
      000003                        282 	.ds	5
      000008                        283 sdcc_atomic_exchange_rollback_start::
      000008 00               [12]  284 	nop
      000009 00               [12]  285 	nop
      00000A                        286 sdcc_atomic_exchange_pdata_impl:
      00000A E2               [24]  287 	movx	a, @r0
      00000B FB               [12]  288 	mov	r3, a
      00000C EA               [12]  289 	mov	a, r2
      00000D F2               [24]  290 	movx	@r0, a
      00000E 80 2C            [24]  291 	sjmp	sdcc_atomic_exchange_exit
      000010 00               [12]  292 	nop
      000011 00               [12]  293 	nop
      000012                        294 sdcc_atomic_exchange_xdata_impl:
      000012 E0               [24]  295 	movx	a, @dptr
      000013 FB               [12]  296 	mov	r3, a
      000014 EA               [12]  297 	mov	a, r2
      000015 F0               [24]  298 	movx	@dptr, a
      000016 80 24            [24]  299 	sjmp	sdcc_atomic_exchange_exit
      000018                        300 sdcc_atomic_compare_exchange_idata_impl:
      000018 E6               [12]  301 	mov	a, @r0
      000019 B5 02 02         [24]  302 	cjne	a, ar2, .+#5
      00001C EB               [12]  303 	mov	a, r3
      00001D F6               [12]  304 	mov	@r0, a
      00001E 22               [24]  305 	ret
      00001F 00               [12]  306 	nop
      000020                        307 sdcc_atomic_compare_exchange_pdata_impl:
      000020 E2               [24]  308 	movx	a, @r0
      000021 B5 02 02         [24]  309 	cjne	a, ar2, .+#5
      000024 EB               [12]  310 	mov	a, r3
      000025 F2               [24]  311 	movx	@r0, a
      000026 22               [24]  312 	ret
      000027 00               [12]  313 	nop
      000028                        314 sdcc_atomic_compare_exchange_xdata_impl:
      000028 E0               [24]  315 	movx	a, @dptr
      000029 B5 02 02         [24]  316 	cjne	a, ar2, .+#5
      00002C EB               [12]  317 	mov	a, r3
      00002D F0               [24]  318 	movx	@dptr, a
      00002E 22               [24]  319 	ret
      00002F                        320 sdcc_atomic_exchange_rollback_end::
                                    321 
      00002F                        322 sdcc_atomic_exchange_gptr_impl::
      00002F 30 F6 E0         [24]  323 	jnb	b.6, sdcc_atomic_exchange_xdata_impl
      000032 A8 82            [24]  324 	mov	r0, dpl
      000034 20 F5 D3         [24]  325 	jb	b.5, sdcc_atomic_exchange_pdata_impl
      000037                        326 sdcc_atomic_exchange_idata_impl:
      000037 EA               [12]  327 	mov	a, r2
      000038 C6               [12]  328 	xch	a, @r0
      000039 F5 82            [12]  329 	mov	dpl, a
      00003B 22               [24]  330 	ret
      00003C                        331 sdcc_atomic_exchange_exit:
      00003C 8B 82            [24]  332 	mov	dpl, r3
      00003E 22               [24]  333 	ret
      00003F                        334 sdcc_atomic_compare_exchange_gptr_impl::
      00003F 30 F6 E6         [24]  335 	jnb	b.6, sdcc_atomic_compare_exchange_xdata_impl
      000042 A8 82            [24]  336 	mov	r0, dpl
      000044 20 F5 D9         [24]  337 	jb	b.5, sdcc_atomic_compare_exchange_pdata_impl
      000047 80 CF            [24]  338 	sjmp	sdcc_atomic_compare_exchange_idata_impl
                                    339 ;--------------------------------------------------------
                                    340 ; global & static initialisations
                                    341 ;--------------------------------------------------------
                                    342 	.area HOME    (CODE)
                                    343 	.area GSINIT  (CODE)
                                    344 	.area GSFINAL (CODE)
                                    345 	.area GSINIT  (CODE)
                                    346 	.globl __sdcc_gsinit_startup
                                    347 	.globl __sdcc_program_startup
                                    348 	.globl __start__stack
                                    349 	.globl __mcs51_genXINIT
                                    350 	.globl __mcs51_genXRAMCLEAR
                                    351 	.globl __mcs51_genRAMCLEAR
                                    352 	.area GSFINAL (CODE)
      000000 02r00r49         [24]  353 	ljmp	__sdcc_program_startup
                                    354 ;--------------------------------------------------------
                                    355 ; Home
                                    356 ;--------------------------------------------------------
                                    357 	.area HOME    (CODE)
                                    358 	.area HOME    (CODE)
      000049                        359 __sdcc_program_startup:
      000049 02r00r00         [24]  360 	ljmp	_main
                                    361 ;	return from main will return to caller
                                    362 ;--------------------------------------------------------
                                    363 ; code
                                    364 ;--------------------------------------------------------
                                    365 	.area CSEG    (CODE)
                                    366 ;------------------------------------------------------------
                                    367 ;Allocation info for local variables in function 'main'
                                    368 ;------------------------------------------------------------
                                    369 ;n             Allocated with name '_main_n_10000_2'
                                    370 ;i             Allocated to registers r6 r7 
                                    371 ;reset_flag    Allocated to registers r5 
                                    372 ;d             Allocated to registers r4 
                                    373 ;j             Allocated to registers r3 
                                    374 ;x             Allocated to registers r4 
                                    375 ;------------------------------------------------------------
                                    376 ;	SevenSegmentLED.c:3: void main(void)
                                    377 ;	-----------------------------------------
                                    378 ;	 function main
                                    379 ;	-----------------------------------------
      000000                        380 _main:
                           000007   381 	ar7 = 0x07
                           000006   382 	ar6 = 0x06
                           000005   383 	ar5 = 0x05
                           000004   384 	ar4 = 0x04
                           000003   385 	ar3 = 0x03
                           000002   386 	ar2 = 0x02
                           000001   387 	ar1 = 0x01
                           000000   388 	ar0 = 0x00
                                    389 ;	SevenSegmentLED.c:11: unsigned char n[4] = { 0, 0, 0, 0 };
      000000 75*00 00         [24]  390 	mov	_main_n_10000_2,#0x00
      000003 75*01 00         [24]  391 	mov	(_main_n_10000_2 + 0x0001),#0x00
      000006 75*02 00         [24]  392 	mov	(_main_n_10000_2 + 0x0002),#0x00
      000009 75*03 00         [24]  393 	mov	(_main_n_10000_2 + 0x0003),#0x00
                                    394 ;	SevenSegmentLED.c:14: unsigned int i = 0;
      00000C 7E 00            [12]  395 	mov	r6,#0x00
      00000E 7F 00            [12]  396 	mov	r7,#0x00
                                    397 ;	SevenSegmentLED.c:17: unsigned char reset_flag = 0;
      000010 7D 00            [12]  398 	mov	r5,#0x00
                                    399 ;	SevenSegmentLED.c:26: for (char d = 0; d < 4; d++)
      000012                        400 00142$:
      000012 7C 00            [12]  401 	mov	r4,#0x00
      000014                        402 00127$:
      000014 BC 04 00         [24]  403 	cjne	r4,#0x04,00229$
      000017                        404 00229$:
      000017 50 3E            [24]  405 	jnc	00108$
                                    406 ;	SevenSegmentLED.c:28: P1 = 4 + d;
      000019 8C 03            [24]  407 	mov	ar3,r4
      00001B 74 04            [12]  408 	mov	a,#0x04
      00001D 2B               [12]  409 	add	a, r3
      00001E F5 90            [12]  410 	mov	_P1,a
                                    411 ;	SevenSegmentLED.c:34: if (d == 3 || n[d] != 0 || (d > 0 && n[d - 1] != 0))
      000020 BC 03 02         [24]  412 	cjne	r4,#0x03,00231$
      000023 80 12            [24]  413 	sjmp	00101$
      000025                        414 00231$:
      000025 EC               [12]  415 	mov	a,r4
      000026 24r00            [12]  416 	add	a, #_main_n_10000_2
      000028 F9               [12]  417 	mov	r1,a
      000029 E7               [12]  418 	mov	a,@r1
      00002A 70 0B            [24]  419 	jnz	00101$
      00002C EC               [12]  420 	mov	a,r4
      00002D 60 15            [24]  421 	jz	00102$
      00002F EB               [12]  422 	mov	a,r3
      000030 14               [12]  423 	dec	a
      000031 24r00            [12]  424 	add	a, #_main_n_10000_2
      000033 F9               [12]  425 	mov	r1,a
      000034 E7               [12]  426 	mov	a,@r1
      000035 60 0D            [24]  427 	jz	00102$
      000037                        428 00101$:
                                    429 ;	SevenSegmentLED.c:36: P2 = seg[n[d]];
      000037 EC               [12]  430 	mov	a,r4
      000038 24r00            [12]  431 	add	a, #_main_n_10000_2
      00003A F9               [12]  432 	mov	r1,a
      00003B E7               [12]  433 	mov	a,@r1
      00003C 90r00r00         [24]  434 	mov	dptr,#_main_seg_10000_2
      00003F 93               [24]  435 	movc	a,@a+dptr
      000040 F5 A0            [12]  436 	mov	_P2,a
      000042 80 03            [24]  437 	sjmp	00141$
      000044                        438 00102$:
                                    439 ;	SevenSegmentLED.c:40: P2 = 0x00;
      000044 75 A0 00         [24]  440 	mov	_P2,#0x00
                                    441 ;	SevenSegmentLED.c:44: for (char j = 0; j < 100; j++)
      000047                        442 00141$:
      000047 7B 00            [12]  443 	mov	r3,#0x00
      000049                        444 00124$:
      000049 BB 64 00         [24]  445 	cjne	r3,#0x64,00235$
      00004C                        446 00235$:
      00004C 50 03            [24]  447 	jnc	00107$
      00004E 0B               [12]  448 	inc	r3
      00004F 80 F8            [24]  449 	sjmp	00124$
      000051                        450 00107$:
                                    451 ;	SevenSegmentLED.c:50: P2 = 0x00;
      000051 75 A0 00         [24]  452 	mov	_P2,#0x00
                                    453 ;	SevenSegmentLED.c:26: for (char d = 0; d < 4; d++)
      000054 0C               [12]  454 	inc	r4
      000055 80 BD            [24]  455 	sjmp	00127$
      000057                        456 00108$:
                                    457 ;	SevenSegmentLED.c:57: if (P3_2 == 0)
      000057 20 B2 22         [24]  458 	jb	_P3_2,00118$
                                    459 ;	SevenSegmentLED.c:60: i++;
      00005A 0E               [12]  460 	inc	r6
      00005B BE 00 01         [24]  461 	cjne	r6,#0x00,00238$
      00005E 0F               [12]  462 	inc	r7
      00005F                        463 00238$:
                                    464 ;	SevenSegmentLED.c:63: if (i > 500)
      00005F C3               [12]  465 	clr	c
      000060 74 F4            [12]  466 	mov	a,#0xf4
      000062 9E               [12]  467 	subb	a,r6
      000063 74 01            [12]  468 	mov	a,#0x01
      000065 9F               [12]  469 	subb	a,r7
      000066 50 AA            [24]  470 	jnc	00142$
                                    471 ;	SevenSegmentLED.c:65: n[0] = n[1] = n[2] = n[3] = 0;
      000068 75*03 00         [24]  472 	mov	(_main_n_10000_2 + 0x0003),#0x00
      00006B 75*02 00         [24]  473 	mov	(_main_n_10000_2 + 0x0002),#0x00
      00006E 75*01 00         [24]  474 	mov	(_main_n_10000_2 + 0x0001),#0x00
      000071 75*00 00         [24]  475 	mov	_main_n_10000_2,#0x00
                                    476 ;	SevenSegmentLED.c:66: i = 0;
      000074 7E 00            [12]  477 	mov	r6,#0x00
      000076 7F 00            [12]  478 	mov	r7,#0x00
                                    479 ;	SevenSegmentLED.c:67: reset_flag = 1;  // 做了重置，放開後不再加 1
      000078 7D 01            [12]  480 	mov	r5,#0x01
      00007A 80 96            [24]  481 	sjmp	00142$
      00007C                        482 00118$:
                                    483 ;	SevenSegmentLED.c:74: if (!reset_flag && i > 10)
      00007C ED               [12]  484 	mov	a,r5
      00007D 70 2B            [24]  485 	jnz	00115$
      00007F C3               [12]  486 	clr	c
      000080 74 0A            [12]  487 	mov	a,#0x0a
      000082 9E               [12]  488 	subb	a,r6
      000083 E4               [12]  489 	clr	a
      000084 9F               [12]  490 	subb	a,r7
      000085 50 23            [24]  491 	jnc	00115$
                                    492 ;	SevenSegmentLED.c:76: n[3]++;
      000087 E5*03            [12]  493 	mov	a,(_main_n_10000_2 + 0x0003)
      000089 04               [12]  494 	inc	a
      00008A F5*03            [12]  495 	mov	(_main_n_10000_2 + 0x0003),a
                                    496 ;	SevenSegmentLED.c:78: for (char x = 3; x > 0; x--)
      00008C 7C 03            [12]  497 	mov	r4,#0x03
      00008E                        498 00130$:
      00008E EC               [12]  499 	mov	a,r4
      00008F 60 19            [24]  500 	jz	00115$
                                    501 ;	SevenSegmentLED.c:80: if (n[x] >= 10)
      000091 EC               [12]  502 	mov	a,r4
      000092 24r00            [12]  503 	add	a, #_main_n_10000_2
      000094 F9               [12]  504 	mov	r1,a
      000095 87 03            [24]  505 	mov	ar3,@r1
      000097 BB 0A 00         [24]  506 	cjne	r3,#0x0a,00243$
      00009A                        507 00243$:
      00009A 40 0B            [24]  508 	jc	00131$
                                    509 ;	SevenSegmentLED.c:82: n[x] = 0;
      00009C 77 00            [12]  510 	mov	@r1,#0x00
                                    511 ;	SevenSegmentLED.c:83: n[x - 1]++;
      00009E 8C 03            [24]  512 	mov	ar3,r4
      0000A0 EB               [12]  513 	mov	a,r3
      0000A1 14               [12]  514 	dec	a
      0000A2 24r00            [12]  515 	add	a, #_main_n_10000_2
      0000A4 F9               [12]  516 	mov	r1,a
      0000A5 07               [12]  517 	inc	@r1
      0000A6 E7               [12]  518 	mov	a,@r1
      0000A7                        519 00131$:
                                    520 ;	SevenSegmentLED.c:78: for (char x = 3; x > 0; x--)
      0000A7 1C               [12]  521 	dec	r4
      0000A8 80 E4            [24]  522 	sjmp	00130$
      0000AA                        523 00115$:
                                    524 ;	SevenSegmentLED.c:88: i = 0;
      0000AA 7E 00            [12]  525 	mov	r6,#0x00
      0000AC 7F 00            [12]  526 	mov	r7,#0x00
                                    527 ;	SevenSegmentLED.c:90: reset_flag = 0;
      0000AE 7D 00            [12]  528 	mov	r5,#0x00
                                    529 ;	SevenSegmentLED.c:93: }
      0000B0 02r00r12         [24]  530 	ljmp	00142$
                                    531 	.area CSEG    (CODE)
                                    532 	.area CONST   (CODE)
                                    533 	.area CONST   (CODE)
      000000                        534 _main_seg_10000_2:
      000000 3F                     535 	.db #0x3f	; 63
      000001 06                     536 	.db #0x06	; 6
      000002 5B                     537 	.db #0x5b	; 91
      000003 4F                     538 	.db #0x4f	; 79	'O'
      000004 66                     539 	.db #0x66	; 102	'f'
      000005 6D                     540 	.db #0x6d	; 109	'm'
      000006 7D                     541 	.db #0x7d	; 125
      000007 27                     542 	.db #0x27	; 39
      000008 7F                     543 	.db #0x7f	; 127
      000009 6F                     544 	.db #0x6f	; 111	'o'
                                    545 	.area CSEG    (CODE)
                                    546 	.area XINIT   (CODE)
                                    547 	.area CABS    (ABS,CODE)
